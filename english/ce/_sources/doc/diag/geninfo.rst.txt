General Information
===================

CERUN will detect problems caused by invalid control emulator commands,
inappropriate control of the NC machine and incompatibilities due to
invalid QUEST responses. In all cases, processing of the
MCD file will continue until an end or rewind code is processed.

Diagnostic messages identify the problem (or event), the severity of
the problem and where possible, any corrective action taken. Also
listed are statistical and positional information. For example:

   .. code-block:: text

      Warning: Dwell value is negative or zero.
        SEVERITY(04) LINE(00035) ERRNUM(02009002) INPUT(test.tap)

Diagnostic messages are composed of three items: the type, message
text and a status line. If the diagnostic occurred from within a
macro, there may also be a message indicating the position of the
diagnostic within the macro. An additional line may also be output
indicating that the macro was terminated due to a serious error.

There are four types of diagnostic messages: Message, Warning, Error
and Fatal. Messages are informational and do not indicate a problem.
Warnings are generated when an unexpected event occurs that
is unlikely to cause any trouble when the program is ultimately run at
the CNC machine. Error and fatal diagnostics are generated when the
control emulator detects a problem in the program that will adversely
affect running of the program at the CNC machine.

The status line is output after the text portion of the diagnostic:

-  **SEVERITY** indicates the severity level of the message and may have
   any value between 0 and 99. By tradition, a severity between 0 and 3
   is considered informational (i.e., a message); a severity between 4
   and 7 is considered a warning; a severity between 8 and 15 is
   considered an error; and finally, a severity between 16 and 99 is
   considered a fatal error.
   CERUN provides a facility to inhibit the output of diagnostics below a defined
   severity level (see :ref:`“Modifying Diagnostic Messages”<modifying_diagnostics>`).
   Lastly, when processing has completed, CERUN returns the value of the highest
   severity encountered in a program to the operating system.

      .. list-table::
         :widths: auto
         :header-rows: 1
         :class: wrap-last

         *  -  Type
            -  Severity
            -  Meaning
         *  -  MESSAGE
            -  0 thru 3
            -  This is the lowest severity.
               It indicates that something noteworthy has occurred but will have no impact on the
               simulation.
               This type of warning may be ignored if desired.
         *  -  WARNING
            -  4 thru 7
            -  This message indicates that a problem has been detected that may or may not adversely affect the
               execution of the NC program on the machine.
         *  -  ERROR
            -  8 thru 15
            -  This message indicates that a major problem has been encountered.
               Execution of the NC program at the machine will likely fail.
         *  -  FATAL
            -  16 thru 99
            -  This is the highest severity.
               Simulation
               has been affected to the point of rendering it useless. Processing of the
               program will continue and the listing file will still be created as usual.

-  **LINE** identifies the block number of the line of MCD that caused
   the diagnostic. This number can be used with the CERUN debugger to
   set a breakpoint on the MCD block in question.

   \

-  **ERRNUM** identifies the diagnostic number. This number can be used with the
   $FERSTA macro function to control the output of the specific diagnostic
   (see :ref:`“Modifying Diagnostic Messages”<modifying_diagnostics>`).
   The diagnostic message text, severity and state can also be modified by editing the
   diagnostic in the cer260.err file (see :ref:`“Error File”<error_file>`).

   \

-  **INPUT** identifies the MCD file currently being processed.

If the diagnostic occurs while processing a macro line, the macro is
identified and the macro line causing the diagnostic is listed. If a
diagnostic has a severity of 8 or higher, a TERMAC statement will be
generated to exit the macro and the following message output:

   .. code-block:: text

      Message: TERMAC generated due to error(s).
